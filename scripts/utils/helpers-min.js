import{recipes}from "../../data/recipes-min.js";import{newRecipes,refreshDisplay,hundleInput,getInputValue,}from "./search-min.js";export async function displayNbRecipes(recipes){const nbRecipes=document.querySelector(".nb-recipes");nbRecipes.innerText=recipes.length+" recettes"}
export function displayMedia(recipes){const cardsContainer=document.querySelector(".cards-container");cardsContainer.innerHTML="";recipes.forEach((recipe)=>{const mediaModel=cardTemplate(recipe);const cardDom=mediaModel.getCardDom();cardsContainer.appendChild(cardDom)})}
export function displayDropdownFilters(tableau,where){const filterIngredientsContainer=document.querySelector(`#option-${where}-container`);filterIngredientsContainer.innerHTML="";const tabToLowerCase=Array.from(new Set(tableau.map((val)=>val.toLowerCase())));tabToLowerCase.forEach((ingredient)=>{const filterModel=filterTemplate(ingredient);const filterDom=filterModel.getFilterDom(where);filterIngredientsContainer.appendChild(filterDom)});refreshDropdownEvent()}
export function sortNameIngredients(recipes){const allIngredientNames=[];recipes.forEach((recipe)=>{recipe.ingredients.forEach((ingredient)=>{if(!allIngredientNames.includes(ingredient.ingredient)){allIngredientNames.push(ingredient.ingredient)}})});return allIngredientNames}
export function sortNameAppareils(recipes){const allApplianceNames=[];recipes.forEach((recipe)=>{if(!allApplianceNames.includes(recipe.appliance)){allApplianceNames.push(recipe.appliance)}});return allApplianceNames}
export function sortNameUstensiles(data){const allUstensilNames=[];data.forEach((recipe)=>{recipe.ustensils.forEach((ustensil)=>{if(!allUstensilNames.includes(ustensil)){allUstensilNames.push(ustensil)}})});return allUstensilNames}
export function refreshDropdownEvent(){const dropDownBtn=document.querySelectorAll(".filter-card");dropDownBtn.forEach((btn)=>{btn.addEventListener("click",()=>{searchByTag(newRecipes)})});const unselectedBtn=document.querySelectorAll(".unselected-filter-card");unselectedBtn.forEach((btn)=>{btn.addEventListener("click",()=>{const allTags=document.querySelectorAll(".active-filter div");if(allTags.length>0){searchByTag(recipes)}else{const inputValue=getInputValue();if(inputValue.length>0){hundleInput()}else{searchByTag(recipes)}}})});const unselectedBtnTags=document.querySelectorAll(".active-filter div img");unselectedBtnTags.forEach((btn)=>{btn.addEventListener("click",()=>{const allTags=document.querySelectorAll(".active-filter div");if(allTags.length>0){searchByTag(recipes)}else{const inputValue=getInputValue();if(inputValue.length>0){hundleInput()}else{searchByTag(recipes)}}})})}
export function searchByTag(recipes){const allTags=document.querySelectorAll(".active-filter div");const ingredients=[];const ustensiles=[];const appareils=[];allTags.forEach((tag)=>{if(tag.classList.contains("ingredients")){ingredients.push(tag.innerText.toLowerCase())}else if(tag.classList.contains("ustensiles")){ustensiles.push(tag.innerText.toLowerCase())}else if(tag.classList.contains("appareils")){appareils.push(tag.innerText.toLowerCase())}});const filteredRecipes=recipes.filter((recipe)=>{const hasSelectedIngredients=ingredients.length===0||ingredients.every((ingredient)=>{return recipe.ingredients.some((item)=>item.ingredient.toLowerCase()===ingredient)});const hasSelectedUstensiles=ustensiles.length===0||ustensiles.every((ustensil)=>{return recipe.ustensils.some((item)=>item.toLowerCase()===ustensil.toLowerCase())});const hasSelectedAppareils=appareils.length===0||appareils.every((appareil)=>{return recipe.appliance.toLowerCase()===appareil.toLowerCase()});return(hasSelectedIngredients&&hasSelectedUstensiles&&hasSelectedAppareils)});newRecipes.splice(0,newRecipes.length,...filteredRecipes);setupSort();refreshDropdownEvent()}
export function setupSort(){const uniqueRecipes=newRecipes.reduce((acc,curr)=>{if(!acc.some((recipe)=>recipe.id===curr.id)){acc.push(curr)}
return acc},[]);uniqueRecipes.sort((a,b)=>a.id-b.id);refreshDisplay(uniqueRecipes)}